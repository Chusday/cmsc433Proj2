CMSC 433 Project 2

+ Authors: Dylan Chu      :
	       - Class pre-req code
	       - Documentation
	 Kayoung Kim    :
	 	 - Re-design code 
	 	 - login system
	 	 - changed the looks as well 
	 	 - new DB 
	 Neh Patel      : npatel10@umbc.edu
	     - Code clean-up 
	     - Documentation 
	     - help on whatever code did not work

===========================================================
+ Location: http://userpages.umbc.edu/~npatel10/pjt2/gitCode/cmsc433Proj2/project2_new2/

===========================================================
+ Project Description: 
    
===========================================================
+ What did w add
  - proving that you deserve the "A"
  - text + screenShot

- The most important thing that was drastically improved was 
  the database 
- Not using a JSON file that was used to strore the 
  classes details. The formatting of the file and 
  readability issues just makes everything worse. 
- The way the look of the web page was presented gave the 
  user a sense of a login system. So we introduced an 
  actual login system for it. 
- Another thing that was changed was the type of servers
  - Old: used a Lamp server, and raspberry pie. The students 
         invested in a hardware, unless they got it for free. 
	 But still a waste of resources.
  - New: Used the school database and servers which are 
         already provided to the users for free(kind of,
	 we still pay tuition). 
 
===========================================================
+ What did we improve
  - The database for sure 
  - The JSON crap seemes annoying to use 
  - Looking at the DB it also seemes as if the previous group 
    had intended to use the DB to figure out the pre-reqs 
    of the courses. Unnecessary data stored on the DB. 
    This is a small amount of hard code. If implemented well, 
    it can be much easier and more useful, rather than storing 
    pre-req info in the daabase.

===========================================================
+ DB setup
  - Labs, screentshot, why?

===========================================================
+ DB dump
  - The database dump file is named 'kayoung2.sql' 
  - It should dump three tables that are required for the 
    code to work correctly. Those tables are: 
    - Students (primary key: student_id) 
    - Courses  (primary key: course_id)
      - the dump will also insert all the courses that are 
        avialable for the students to take
    - proj2_taken 
      - relational table btw. Students and Coures (many-to-many)
      - the file should also be able to alter and create the
        relation between the other two tables. 

===========================================================
+ Languages used
  - Html 
    - used for the pages and basic setup 
  - PHP
    - most of the code here. 
      - enabled login interface
      - validaiton of student information 
      - class pre-requisite validation 
  - Javascript (functions.js) 
    - few functions that assisted in login interface 
  - Ajax 
    - assisted in login interface
    - mostly appears in functions.js

===========================================================
+ Slick Sheet?

